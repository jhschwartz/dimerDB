import os
import sys 

configfile: 'config.yaml'

sys.path.append(config['paths']['scripts'])
from simple_write import simple_write


# force pdb update
pdb_updated = config['snake_donefiles']['sub0_pdb_download_done']
if config['database_settings']['force_update_pdb'] and os.path.exists(pdb_updated):
    os.remove(pdb_updated)


localrules: all, download_pdb

rule all:
    input:
        config['snake_donefiles']['sub0_split_pdb_done']
    output:
        done =  config['snake_donefiles']['sub0_all_done'] 
    shell:
        "touch {output.done}"


rule download_pdb:
    output:
        done =  config['snake_donefiles']['sub0_pdb_download_done']
    params:
        lib = config['paths']['lib']
    shell:
        """
        mkdir -p {params.lib}
        cd {params.lib} 
        rsync -rlpt -v -z -q --delete --port=33444 \
        rsync.rcsb.org::ftp_data/assemblies/mmCIF/divided/ ./rcsb_pdb
        touch ../{output.done}
        """


rule ungzip_pdb:
    input:
        config['snake_donefiles']['sub0_pdb_download_done'],
    output:
        done =  config['snake_donefiles']['sub0_ungzip_done'] 
    threads: config['runtime']['max_threads']
    resources:
        time = "12:00:00",
        mem_mb = "1000000" 
    params:
        scripts = config['paths']['scripts'],
        lib = config['paths']['lib']
    shell:
        """
        {params.scripts}/parallel_ungzip_all.sh {params.lib}/rcsb_pdb {threads} 1000
        touch {output.done};
        """


rule split_pdb:
    input:
        config['snake_donefiles']['sub0_ungzip_done'] 
    output:
        done =  config['snake_donefiles']['sub0_split_pdb_done'] 
    threads: config['runtime']['max_threads']
    resources:
        time = "12:00:00",
        mem_mb = "1000000"
    run:
        from parallel_convert_split_cif import parallel_convert_split_rename_cifs
        rcsb = config['paths']['lib'] + '/rcsb_pdb'
        exe = config['paths']['cif2pdb']
        parallel_convert_split_rename_cifs(rcsb, exe, threads)
        simple_write(output.done)



